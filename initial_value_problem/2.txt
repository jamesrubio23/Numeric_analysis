function comp2ode45(met)
%La función testmet resuelve un problema de valor inicial de la forma
%x'=f(t,x) en [t0,T]
%x(t0)=x0,
%con x0 en R^n, mediante uno de los métodos que tengamos programados, por el método ode45 y compara las soluciones.
%Lee los datos del problema del script datos.m
%Además dibuja la solución del problema de la siguiente manera:

%Si la ecuación diferencial es escalar:
% -La gráfica de la solución por el método a comparar.
% -La gráfica de la diferencia entre las soluciones obtenidas por ambos métodos.
% -La norma infinito de la diferencia entre las soluciones obtenidas por ambos métodos.

% Si la ecuación diferencial es de dimensión 2 ò 3:
% -La gráfica de todas las componentes de la solución aproximada por el método a comparar.
% -La gráfica de la diferencia entre las componentes de las soluciones obtenidas por el método y el método ode45.
% -La gráfica de la trayectoria de la solución por el método a comparar.
% -La norma infinito de la diferencia entre las soluciones obtenidas por el método a comparar y el método ode45.

%%ENTRADA:
%met: nombre del método a comparar.

%%SALIDA:
%t: vector columna de abscisas donde se va a aproximar la solución de tipo (N+1,1)
%x1: matriz de ordenadas de la solución aproximada por el método a comparar de tipo (N+1,n)


datos
t=linspace(I(1),I(2), N+1);
[~,x1]=met(f,I,x0,N);
[t,x2]=ode45(f,t,x0);
metstr=func2str(met)
x=x1-x2;

n=size(x1,2); % Numero de columnas de la matriz x
color=['r' 'g' 'b'];

figure(1)
for i=1:n
  subplot(n,1,i)
  plot(t,x1(:,i),color(i))
  s=sprintf('Coordenada %d de la solucion por el primer método %s',i,metstr);
  title(s)
end

figure(2)
for i=1:n 
  subplot(n,1,i)
  plot(t,x(:,i),color(i))
  s=sprintf('Coordenada %d de la diferencia de las soluciones',i);
  title(s)
end

if n>1
  pause(3) 
  figure(3)
  if n==2
      plot(x1(:,1),x1(:,2),'r')
      %comet(x(:,1),x(:,2))
  else
      %plot3(x(:,1),x(:,2),x(:,3),'r')
      comet3(x1(:,1),x1(:,2),x1(:,3))
  end
end
title('Trayectoria de la solucion por el método %',metstr)

figure(4)
ninf=max(max(abs(x)));
y=linspace(ninf,ninf,N+1);
l=sprintf('%g  Valor de ||x||inf', ninf);
plot(t,y)
legend(l)

